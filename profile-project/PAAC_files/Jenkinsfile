pipeline {
    agent any 
    tools {
      maven "MAVEN3"
      jdk "OracleJDK11"
    }

    stages {
      stage('A - Fetch Code'){
         steps {
            git branch: 'CICD', url: 'https://github.com/kelvin-meyet/DevOps.git'
         }
      }

      stage('B - Build'){
        steps {
          // Change directory to 'profile-project' before running the Maven command
          dir('profile-project') {
            sh 'mvn clean install -DskipTests'
          }
        }
        post {
           success {
             echo 'Archiving artifacts now.'
             // Ensure the path to the .war files includes the 'profile-project' directory if needed
             archiveArtifacts artifacts: 'profile-project/**/target/*.war' 
           }
        }
      }

      stage('C - UNIT Test') {
        steps {
          // Change directory to 'profile-project' before running the Maven command
          dir('profile-project') {
            sh 'mvn test'
          }
        }
      }

      stage('D - Checkstyle Analysis'){
         steps {
            // Change directory to 'profile-project' before running the Maven  command on checkstyle
            dir('profile-project') {
               sh 'mvn checkstyle:checkstyle'
            }
         }
      }
      stage('E - Sonar Analysis'){
        environment {
           scannerHome = tool 'sonar4.7'
        }
        steps {
             // Change directory to 'profile-project' before running the Sonarqube command
            dir('profile-project') {
                withSonarQubeEnv('sonar') {
                   sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                   -Dsonar.projectName=vprofile \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=src/ \
                   -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                   -Dsonar.junit.reportsPath=target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
                }
            }

        }
      }
       
      stage(' F - Publish to Nexus: Kelvin '){
         steps{
         // Change directory to 'profile-project' 
            dir('profile-project') {
              nexusArtifactUploader(
                nexusVersion: 'nexus3',
                protocol: 'http',
                nexusUrl: '54.147.141.185:8081', 
                groupId: 'STAGE',
                version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
                repository: 'vprofile-repo',
                credentialsId: 'nexuslogin',
                artifacts: [
                   [artifactId: 'vproapp',
                    classifier: '',
                    file: 'target/vprofile-v2.war',
                    type: 'war']
                ]
              )
            }
         }
          
      } 

    }
}